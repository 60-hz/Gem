dnl Process this file with autoconf to produce a configure script.
AC_INIT(../Base/CPPExtern.h)

ARCH=$(uname -m)
KERN=$(uname -s)

CONFFILE=../Base/config$KERN.h
AC_CONFIG_HEADER($CONFFILE)


dnl for now i can test ICC only on linux
dnl LATER we might want to use it for other platforms (namely:windoze) too

if test "$KERN" = "Linux"; then
 AC_ARG_ENABLE(icc,    [  --enable-icc            enable ICC-support])
 if test "$enable_icc" = "yes"; then
   CXX=icc
 fi
fi

if test "$ARCH" = "alpha"; then
  AFLAGS="-mieee  -mcpu=ev56"
fi
     

gemsrc="./.."

VERSION=cvs
PACKAGE=gem

AC_SUBST(VERSION)
AC_SUBST(PACKAGE)

dnl we should rather search for the GemLibs
GEMLIBS="../../../GemLibs/"

dnl i have no idea, how to display these default-strings in the "--help"-stuff below
default_search_libs="$GEMLIBS /usr/local/lib /usr/local/src"
default_search_heads="/usr/include /usr/local/include $GEMLIBS"


dnl
dnl libraries that are need on some systems, but not on others
dnl set these to something other than "" if configure should exit on failure to detect them
dnl
need_png=""
need_tiff=""
need_jpeg=""

dnl on Linux we do need png, tiff and jpeg
if test "x$KERN" = "xLinux"
then
  need_png="yes"
  need_tiff="yes"
  need_jpeg="yes"
fi


dnl
dnl first comes the user-config stuff
dnl
AC_ARG_WITH(gemlibs, [  --with-gemlibs=DIR{:DIRS}     where to search for non-standard libs (aka GemLibs)])
AC_ARG_ENABLE(y, [                          [DIR=../../../GemLibs:/usr/local/lib:/usr/local/src ]])
AC_ARG_ENABLE(y, [  --includedir=DIR{:DIRS} where to search for non-standard headers])
AC_ARG_ENABLE(y, [                          [DIR=/usr/include:/usr/local/include:../../../GemLibs]])
AC_ARG_ENABLE(y, [])
AC_ARG_ENABLE(mmx,    [  --enable-mmx            enable MMX-support])
AC_ARG_ENABLE(static, [  --enable-static         static linking (default is: dynamic) ])
AC_ARG_ENABLE(new,    [  --disable-new           disable new versions of pix_film/pix_video])
AC_ARG_ENABLE(ARB,    [  --disable-ARB           disable openGL's ARB-extensions])
AC_ARG_ENABLE(registerstruct, [  --enable-registerstruct enable the \"-freg-struct-return\" (useful for FreeFrame-plugins)])
AC_ARG_WITH(ftgl,      [  --without-ftgl          disable FTGL (for font rendering)])
AC_ARG_WITH(gltt,      [  --without-gltt          disable GLTT (for font rendering (old))])
AC_ARG_WITH(magick,    [  --without-imagemagick   disable image-magick image loading])
AC_ARG_WITH(mpeg,      [  --without-mpeg          disable MPEG(1)-filmIN support])
AC_ARG_WITH(mpeg3,     [  --without-mpeg3         disable MPEG3-filmIN support (overrides MPEG(1)-support)])
AC_ARG_WITH(quicktime, [  --without-quicktime     disable quicktime-filmIN support])
AC_ARG_WITH(avi,       [  --without-avi           disable AVI-support (might provide MPEG)])
AC_ARG_WITH(aviplay,   [  --without-aviplay       alias for \"--without-avi\"])
dnl AC_ARG_WITH(avcodec,   [  --with-avcodec=<lib>    location of libavcodec.a])
dnl AC_ARG_WITH(avformat,  [  --with-avformat=<lib>   location of libavformat.a])
AC_ARG_WITH(ffmpeg,    [  --without-ffmpeg        disable FFMPEG-support])
AC_ARG_WITH(ieee1394,  [  --without-ieee1394      disable IEEE1394-support (aka. firewire or DV)])
AC_ARG_WITH(pdversion, [  --with-pdversion=<ver>  enforce a certain pd-version (e.g. 0.37)])

if test "$with_aviplay"
then
  if test -z "$with_avi"
  then
    with_avi="$with_aviplay"
  else
    if test "$with_avi" != "$with_aviplay"
    then
      echo "--libaviplay is an alias for --libavi."
      echo "they shouldn't be set to contradictory values..."
      exit 1
    fi
  fi
fi

dnl of course we need X on Linux, so don't let the user disable it

if test "$with_x" = "no" -a "x$KERN" = "xLinux"
then
  echo "Gem will not run without X"
  exit 1
fi

dnl there should be a flag for which paths to search the libs in
dnl "--libdir"
if test "$libdir" && test "$libdir" != "\${exec_prefix}/lib"
then
  libdir=":$libdir"
  LIBS="$LIBS `echo $libdir | sed -e 's/:/ -L/g'`"
fi

dnl there should be a flag for which paths to search the libs in
dnl "--gemlibs"
if test "$with_gemlibs" != ""
then
  search_libs=`echo $with_gemlibs | sed -e 's/:/ /g'`
else
  search_libs=$default_search_libs
fi

dnl there should be a flag for which paths to search the headers in
dnl maybe ab-use "--includedir"
if test "$includedir" != "\${prefix}/include"
then
  search_heads=`echo $includedir | sed -e 's/:/ /g'`
else
  search_heads="$default_search_heads"
fi

echo HEAD: $search_heads
echo LIBS: $search_libs

dnl
dnl now comes the path-stuff
dnl
PDBASE=/lib/pd
DOCBASE=/share/doc
AC_SUBST(PDBASE)
AC_SUBST(DOCBASE)
dnl ac_prefix is /usr/local by default
AC_SUBST(prefix)


dnl check for architecture
dnl ***********************************************************************

AC_CANONICAL_HOST

ttarget=pd_`echo $host_os | sed /.*/s/-.*//`
target=`echo $ttarget | sed -e 's/\[.].*//'`

if test "x$host_os" = "x"
then
dnl just assuming that it is still linux (e.g. x86_64)
 target="pd_linux"
fi

echo Configuring for Gem.$target
AC_SUBST(target)

dnl Check for make version

AC_SUBST_FILE(build_rules)

echo $ac_n "checking for gnu make""... $ac_c"  1>&6

ac_make_gnu=`make -v | sed /GNU/p`
if test "$ac_make_gnu" != ""; then
  ac_make_gnu="yes";
  build_rules="Config.gnumake"
  echo $ac_t "yes";
else 
  ac_make_gnu="no";
  build_rules="Config.make"
  echo $ac_t "no";
fi

dnl Checks for programs.
dnl ***********************************************************************

dnl how should we check for intels compiler icc ? AC_PROG_CXX (icc,g++) doesnt seem to work
AC_PROG_CXX
#case $target in 
#pd_irix*)
#    echo $ac_n "checking for irix C++ compiler""... $ac_c" 1>&6

#    if test "${GXX+set}" = set; then 
#      echo $ac_t yes;
#      echo "adding flags for irix CC compiler";
#      CXXFLAGS="$CXXFLAGS -o32 -mips2 -xansi -woff 3157,3173";
#    else
#      echo $ac_t no;
#    fi;;
#esac

AC_PROG_CC
AC_SUBST(CC)
AC_SUBST(CXX)

AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_CHECK_PROGS(shell_prog,sh)

AC_PATH_XTRA


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
dnl AC_C_INLINE
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(strdup strstr)

dnl Checks for MMX
if test "$enable_mmx" != "no"; then
AC_MSG_CHECKING("for MMX")
dnl right now, i only know how to do this for gcc
cat > conftest.c++ << EOF
#include <mmintrin.h>
int main(){
  __m64 m;
  return 0;
}
EOF
MMXFLAGS=""
if test "$CXX" = "icc"; then
 $CXX $CXXFLAGS $CPPFLAGS $MMXFLAGS -xK -o conftest.o conftest.c++ && MMXFLAGS="-xK"
else
 $CXX $CXXFLAGS $CPPFLAGS $MMXFLAGS -mmmx -o conftest.o conftest.c++ && MMXFLAGS="-mmmx"
fi
dnl $CXX $CXXFLAGS $CPPFLAGS $MMXFLAGS -mfpmath=sse -o conftest.o conftest.c++ && MMXFLAGS="-mmmx"
fi
if test "$MMXFLAGS" != ""; then
  AC_MSG_CHECKING("MMX found")
  echo
  dummy="HAVE_MMX"
  AC_DEFINE_UNQUOTED($dummy)	
else
  MMXFLAGS=""
  if test "$enable_mmx" = "yes"; then
    AC_MSG_ERROR([you enforced the use of MMX although the compiler ($CXX) doesn't support it])
  elif test "$enable_mmx" = ""; then
    AC_MSG_CHECKING("MMX not found")
    echo
  else
    echo "disabled MMX..."
  fi
fi

dnl Checks for headers and libraries.
dnl ***********************************************************************

dnl 
dnl make the auxiliary libraries GemLibs
dnl 
if test -d $GEMLIBS
then
  . makeauxlibs
fi

dnl look for PD
AC_FIND_HEADER(m_pd.h, $search_heads , fail)


dnl Checks for pd-version, to set the correct help-path
AC_MSG_CHECKING("pd\>=0.37")

if test "$with_pdversion" != ""
then
echo -n "($with_pdversion)... "
  PD_VERSION="$with_pdversion"
else
cat > conftest.c << EOF
#include <stdio.h>
#include "m_pd.h"
int main(){
  printf("%d.%d\n", PD_MAJOR_VERSION, PD_MINOR_VERSION);
  return 0;
}
EOF
 if $CXX $INCLUDES -o conftest.o conftest.c > /dev/null 2>&1
 then
  PD_VERSION=`./conftest.o`
 else
  PD_VERSION=""
 fi
fi

let PD_MAJORVERSION=`echo $PD_VERSION | cut -d"." -f1`+0
let PD_MINORVERSION=`echo $PD_VERSION | cut -d"." -f2`+0

if test "$PD_MAJORVERSION" -gt 0 || test "$PD_MINORVERSION" -ge 37
then
  REFERENCEPATH=extra/help-Gem
  echo "yes"
else
  REFERENCEPATH=doc/5.reference/Gem
  echo "no"
fi

source_dirs="$SOURCEDIRS"
AC_SUBST(source_dirs)

LIBTOOL=""
AC_SUBST(LIBTOOL)
arch_ld_flags="-shared"
AC_SUBST(arch_ld_flags)

if test "$x_libraries" != ""; then
LDFLAGS="$LDFLAGS -L$x_libraries";
fi

AC_CHECK_LIB(X11,main)
AC_CHECK_LIB(Xext,main)
AC_CHECK_LIB(Xxf86vm,XF86VidModeGetAllModeLines)
dnl add -shared to the libraries, so X will be shared
LIBS="-shared -Wl,-export-dynamic $LIBS"

dnl AC_ARG_ENABLE(static, "   " ,LIBS="/usr/lib/gcc-lib/i486-linux/egcs-2.91.57/libstdc++.a $LIBS")

AC_CHECK_LIB(m,sin)
AC_CHECK_LIB(z,main)

if test "${GXX+set}" != set; then
AC_CHECK_LIB(dl,dlopen)
AC_CHECK_LIB(stdc++,main)
fi

ggstatic="-Wl,-Bstatic"
dnl AC_ARG_WITH(static,"   " ,LIBS="$ggstatic $LIBS")
if test "$enable_static" = "yes"
then
  LIBS="$ggstatic $LIBS"
fi


dnl we first check for the headers, as we need them anyhow
dnl if the headers are there we check for the libraries 
dnl on any reasonable distribution it shouldn't be possible to
dnl install the headers without the libraries...

dnl Check for OpenGL (Original or Mesa) (or osX-framework)
AC_CHECK_HEADERS(GL/gl.h GL/glu.h,,
        [AC_CHECK_HEADERS(OpenGL/gl.h OpenGL/glu.h,,
      	[echo "OpenGL is mandatory";exit 1])]
)

AC_CHECK_LIB(GL, glInitNames,,
	AC_CHECK_LIB(MesaGL,glInitNames,,
       	echo "OpenGL is mandatory";exit 1)
)

dnl Check for GLU (Original or Mesa)
AC_CHECK_LIB(GLU, gluLookAt, ,
	AC_CHECK_LIB(MesaGLU,gluLookAt,,
	echo "incomplete OpenGL (no GLU)";exit 1)
)

dnl Checking image-libraries
dnl Check for PNG
	AC_FIND_LIB(png, png_set_compression_level, $search_libs, [$need_png])
dnl Check for TIFF
	AC_FIND_LIB(tiff, TIFFOpen, $search_libs, [$need_tiff])
dnl Check for Jpeg
	AC_FIND_LIB(jpeg, jpeg_read_header, $search_libs, [$need_jpeg])

dnl Check for ImageMagick++
if test "$with_magick" != "no"
then
  AC_FIND_HEADER(Magick++.h, $search_heads, $with_magick)
  if test "$ac_hdr" = "HAVE_MAGICKPLUSPLUS_H"; then
    AC_FIND_LIB(Magick++, Image, $search_libs, fail)
    with_magick="yes"
  else
    with_magick="no"
  fi
fi

dnl Checking font-libraries
dnl FTGL should overrule GLTT
dnl
dnl GLTT | FTGL || result
dnl   y  |  y   || ftgl
dnl   -  |  y   || ftgl
dnl   n  |  y   || ftgl
dnl   y  |  -   || gltt
dnl   -  |  -   || ftgl,gltt,- !!
dnl   n  |  -   || ftgl,-
dnl   y  |  n   || gltt
dnl   -  |  n   || gltt,-
dnl   n  |  n   || -

with_font="no"

if test "$with_gltt" = "yes"; then
  if test "$with_ftgl" != "yes"; then
    with_ftgl="no"
  fi
fi

if test "$with_ftgl" != "no"; then
 AC_FIND_HEADER(FTGLPixmapFont.h, $search_heads, $with_ftgl)
 if test "$ac_hdr" = "HAVE_FTGLPIXMAPFONT_H"; then
  with_ftgl="yes"
  AC_FIND_LIB(ftgl, FTGLPixmapFont,$search_libs, $with_ftgl)
  dnl Check for freetype (ftgl depends on freetype)
  AC_FIND_HEADER(freetype/config/ftheader.h, $search_heads, $with_ftgl)
  AC_FIND_LIB(freetype, New_Face,$search_libs, $with_ftgl)
  with_font="FTGL"
  with_gltt="no"  
 fi
fi

if test "$with_gltt" != "no"
then
dnl Check for gltt
  AC_FIND_HEADER(GLTTFont.h, $search_heads, $with_gltt)
dnl Check for TTF (gltt depends on ttf)
  if test "$ac_hdr" = "HAVE_GLTTFONT_H"; then
    with_gltt="yes"
    AC_FIND_LIB(gltt, open, $search_libs, $with_gltt)
    dnl Check for ttf (gltt depends on this)
    AC_FIND_LIB(ttf, TT_FreeType_Version, $search_libs, fail)
    with_font="gltt"
  fi
fi


dnl Checking for video-libraries
dnl Check for sgi vl library
AC_CHECK_LIB(vl,main,
             SGI_SPECIFIC="pix_videoSGI.o pix_indycam.o")


dnl Check glib (do we need this for png ?)
AC_CHECK_LIB(glib, main)

dnl Checking the rest


dnl video formats (selectable by command-line args)

dnl MPEG3 (is better than MPEG1)
if test "$with_mpeg3" != "no"
then
  AC_FIND_HEADER(libmpeg3.h, $search_heads, $with_mpeg3)
  if test "$ac_hdr" = "HAVE_LIBMPEG3_H"; then
    AC_FIND_LIB(mpeg3, mpeg3_check_sig, $search_libs, fail)
    with_mpeg3=yes
  else
    with_mpeg3=no
  fi
fi

if test "$with_mpeg" != "no"
then
  if test "$ac_tr_lib" != "HAVE_LIBMPEG3"
  then
    AC_FIND_HEADER(mpeg.h, $search_heads, $with_mpeg)
    if test "$ac_hdr" = "HAVE_MPEG_H"; then
      AC_FIND_LIB(mpeg, OpenMPEG, $search_libs, fail)
      with_mpeg=yes
    fi
  else
    with_mpeg=no
    echo skipping check for mpeg because mpeg3 is used
  fi
fi


if test "$with_quicktime" != "no"
then
  AC_FIND_HEADER(quicktime/quicktime.h, $search_heads, $with_quicktime)
  if test "$ac_hdr" = "HAVE_QUICKTIME_QUICKTIME_H"; then
    AC_FIND_LIB(quicktime, quicktime_check_sig, $search_libs, fail)
    with_quicktime=yes
  else
    with_quicktime=no
  fi
fi


if test "$with_avi" != "no"
then
  if which avifile-config > /dev/null
  then
    INCLUDES="`avifile-config --cflags` $INCLUDES"
    LIBS="`avifile-config --libs` $LIBS"
    AC_DEFINE_UNQUOTED(HAVE_LIBAVIPLAY)
    AC_MSG_CHECKING("for avifile")
    echo "yes"
    with_avi=yes
  else
    AC_FIND_HEADER(avifile.h, $search_heads, $with_avi)
    if test "$ac_hdr" = "HAVE_AVIFILE_H"; then
      AC_FIND_LIB(aviplay, CreateIAviReadFile, $search_libs, fail)
      with_avi=yes
    else
      with_avi=no
    fi
  fi
fi

dnl
dnl  Test for FFMPEG libraries
dnl
#if test "$with_avcodec" != "" -a "$with_avformat" != ""
#then
#  echo "building pix_film with FFMPEG support"
#  LIBS="$with_avcodec $with_avformat $LIBS $with_avcodec $with_avformat"
#  AC_DEFINE_UNQUOTED(HAVE_LIBAVCODEC)
#  AC_DEFINE_UNQUOTED(HAVE_LIBAVFORMAT)
#  with_ffmpeg=yes
#else
#  with_ffmpeg=no
#fi
if test "$with_ffmpeg" != "no"
then
  if which ffmpeg-config > /dev/null
  then
    INCLUDES="`ffmpeg-config --cflags` $INCLUDES"
    LIBS="`ffmpeg-config --libs avformat` $LIBS"
    AC_DEFINE_UNQUOTED(HAVE_FFMPEG)
    AC_MSG_CHECKING("for ffmpeg")
    echo "yes"
    with_ffmpeg=yes
  else
dnl we need "avformat" which depends on "avcodec"
    AC_FIND_HEADER(avformat.h, $search_heads, $with_ffmpeg)
    if test "$ac_hdr" = "HAVE_AVFORMAT_H"; then
      AC_FIND_LIB(avcodec, avcodec_open, $search_libs, fail)
      AC_FIND_LIB(avformat, av_open_input_file, $search_libs, fail)
      with_ffmpeg=yes
    else
      with_ffmpeg=no
    fi
  fi
fi
dnl end FFMPEG

with_v4l=yes

if test "$with_ieee1394" != "no"
then
  AC_FIND_HEADER(libdv/dv.h, $search_heads, $with_ieee1394)
  if test "$ac_hdr" = "HAVE_LIBDV_DV_H"; then
   AC_FIND_LIB(dv, dv_init, $search_libs, fail)
   with_ieee1394=yes
  else
   with_ieee1394=no
  fi
fi

dnl a (not so) new scheme for movie/video-loading
if test "$enable_new" != "no"; then
 CXXFLAGS="$CXXFLAGS -DNEW_VIDEOFILM"
else
 echo "using deprecated video-loader"
fi

dnl disabling ARB-extensions
if test "x$enable_ARB" = "x"; then
 AC_CHECK_LIB(GL,glBindProgramARB,
	enable_ARB="yes",enable_ARB="no")
fi

if test "$enable_ARB" = "no"; then
 echo "disabling ARB-extensions"
 AC_DEFINE_UNQUOTED(DONT_USE_ARB)
fi


dnl enabling "-freg-struct-return"
if test "$enable_registerstruct" = "yes"; then
  echo "enabling \"register struct return\""
  echo "  allows to make use of FreeFrame-effects without recompiling them"
  echo "  might break things, if you are using several different compilers"
  CXXFLAGS="$CXXFLAGS -freg-struct-return"
else
  enable_registerstruct="no"
fi


dnl optimization and debugging flags

CXXOPTIMIZE_FLAGS="$CXXOPTIMIZE_FLAGS $MMXFLAGS"

if test "$CXX" = "icc"; then
 CXXDEBUG_FLAGS="$CXXDEBUG_FLAGS"
 CXXOPTIMIZE_FLAGS="$CXXOPTIMIZE_FLAGS -ip -ipo_obj -ftz -rcd"
 LDFLAGS="$LDFLAGS -ip -ipo_obj"
else
 CXXDEBUG_FLAGS="$CXXDEBUG_FLAGS -fno-builtin"
 CXXOPTIMIZE_FLAGS="$CXXOPTIMIZE_FLAGS -O3 -funroll-loops -ffast-math"
fi


dnl do some substitution

AC_SUBST(SGI_SPECIFIC)

AC_SUBST(arch_ld_flags)
AC_SUBST(LIBS)
AC_SUBST(INCLUDES)

AC_SUBST(REFERENCEPATH)

AC_SUBST(CPPFLAGS)

dnl i am not entirely sure, whether "-fPIC" is a good idea on ALL platforms
CXXFLAGS="$CXXFLAGS -fPIC"
AC_SUBST(CXXFLAGS)

AC_SUBST(AFLAGS)

AC_SUBST(CXXDEBUG_FLAGS)
AC_SUBST(CXXOPTIMIZE_FLAGS)


dnl 
dnl We will use the same Makefiles for any subdir .. so build the Makefile.in
dnl 
. makesource

dnl
dnl and create "Makefile"s out of them
dnl
AC_OUTPUT(Makefile  
$gemsrc/Manips/Makefile
$gemsrc/Particles/Makefile
$gemsrc/Base/Makefile
$gemsrc/MarkEx/Makefile 
$gemsrc/Pixes/Makefile 
$gemsrc/Controls/Makefile 
$gemsrc/Nongeos/Makefile 
$gemsrc/Geos/Makefile
$gemsrc/openGL/Makefile
)

dnl
dnl give some feedback about the configuration
dnl
AC_MSG_RESULT([
Result:
  Target                 : Gem.${target}

Configuration:
  Compiler               : ${CXX}
  CPPFLAGS               : ${CPPFLAGS}
  CXXFLAGS               : ${CXXFLAGS}
  optimization           : ${CXXOPTIMIZE_FLAGS}
  debugging              : ${CXXDEBUG_FLAGS}

  Install path           : ${prefix}

 pure-data:
  version                : ${PD_MAJORVERSION}.${PD_MINORVERSION}

 optional libraries:

  font-rendering         : ${with_font}

  image-support
    use ImageMagick      : ${with_magick}
  video-support
    use mpeg             : ${with_mpeg}
    use mpeg-3           : ${with_mpeg3}
    use QuickTime        : ${with_quicktime}
    use aviplay          : ${with_avi}
    use ffmpeg           : ${with_ffmpeg}
  input-support
    use v4l              : ${with_v4l}
    use ieee1394         : ${with_ieee1394}

  misc
    using ARB-extensions : ${enable_ARB}
    using reg-struct-ret : ${enable_registerstruct}

Now run make ...
])
