////////////////////////////////////////////////////////
//
// GEM - Graphics Environment for Multimedia
//
// zmoelnig@iem.kug.ac.at
//
// Implementation file 
//
//    Copyright (c) 1997-1999 Mark Danks.
//    Copyright (c) Günther Geiger.
//    Copyright (c) 2001-2002 IOhannes m zmoelnig. forum::für::umläute. IEM
//    For information on usage and redistribution, and for a DISCLAIMER OF ALL
//    WARRANTIES, see the file, "GEM.LICENSE.TERMS" in this distribution.
//
/////////////////////////////////////////////////////////

#include "plugins/record.h"

using namespace gem;

#include <stdlib.h>

/////////////////////////////////////////////////////////
//
// record
//
/////////////////////////////////////////////////////////
// Constructor
//
/////////////////////////////////////////////////////////

record :: record():
  m_currentFrame(0),
  m_xoff(0), m_yoff(0), m_width(320), m_height(240)
{}

/////////////////////////////////////////////////////////
// Destructor
//
/////////////////////////////////////////////////////////
record :: ~record()
{
  close();
}

void record :: close(void)
{}

/////////////////////////////////////////////////////////
// open a file !
//
/////////////////////////////////////////////////////////
bool record :: open(const char *filename)
{
  return false;
}

///////////////////////////////
// set the size (do we need this?)
bool record :: size(int w, int h) {
  return false;
}

///////////////////////////////
// set the x/y-offset (do we need this?)
bool record :: position(int w, int h) {
  return false;
}



/////////////////////////////////////////////////////////
// set the codec
//
/////////////////////////////////////////////////////////
bool record :: dialog()
{
  return false;
}

/////////////////////////////////////////////////////////
// get number of codecs
//
/////////////////////////////////////////////////////////
int record :: getNumCodecs()
{
  return 0;
}
const char*record :: getCodecName(int i)
{
  return NULL;
}
const char*record :: getCodecDescription(int i)
{
  return NULL;
}
/////////////////////////////////////////////////////////
// set codec by number
//
/////////////////////////////////////////////////////////
bool record :: setCodec(int num)
{
  return false;
}
/////////////////////////////////////////////////////////
// set codec by name
//
/////////////////////////////////////////////////////////
bool record :: setCodec(const char*name)
{
  return false;
}


INIT_RECORDFACTORY();
